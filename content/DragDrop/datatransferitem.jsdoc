DataTransferItem : Object

DataTransferItem represents an item that can is being dragged.
There can be more than one DataTransferItem for a drag and drop operation.
For example, dragging a document may have a
DataTransferItem containing the rich text and a DataTransferItem containing
the plain text.

Spec:
https://html.spec.whatwg.org/multipage/dnd.html#datatransferitem

----
instance.kind : String

The kind of the item.  Will be one of **'string'** or **'file'**.

<htmlexample>
<span draggable='true' ondragstart='onDragStart(event)' style='background: #adf'>Drag Me</span>
<select id='select'></select>

<div id='dropTarget' style='background: #eee'>Drop Here ('Drag Me' or a text or image file from your computer)</div>
<textarea id='textOutput' style='width: 200px; height: 100px'></textarea>
<img id='imgOutput' style='width: 100px; height: 100px'>
<script>
  var options = ['none', 'copy', 'link', 'move', 'copyLink',
                 'copyMove', 'linkMove', 'all', 'uninitialized'];
  var select = document.getElementById('select');
  options.forEach(function(option, i) {
    select.add(new Option(option, option));
  });
  select.value = 'copy';

  var onDragStart = function(event) {
    event.dataTransfer.effectAllowed = select.value;
    event.dataTransfer.items.add('Dragged text', 'text/plain');
  };

  var dropTarget = document.getElementById('dropTarget');

  dropTarget.ondragenter = dropTarget.ondragover = function(event) {
    // The browser cancels the drop by default. preventDefault to stop that
    event.preventDefault();
  };

  var textOutput = document.getElementById('textOutput');
  var imgOutput = document.getElementById('imgOutput');

  dropTarget.ondrop = function(event) {
    var items = event.dataTransfer.items;

    for (var i = 0; i < items.length; i++) {
      var item = items[i];

      console.log('drop: kind=' + item.kind + ', type=' + item.type);
      if (item.kind === 'string') {
        item.getAsString(function(data) {
          textOutput.textContent = data;
        });
      }
      else { // item.kind === 'file'
        if (item.type.indexOf('text/') === 0) {
          var reader = new FileReader();
          reader.onload = function(event) {
            textOutput.textContent = event.target.result;
          };
          reader.readAsText(item.getAsFile());
        }
        else if (item.type.indexOf('image/') === 0) {
          imgOutput.src = URL.createObjectURL(item.getAsFile());
        }
      }
    }

    event.preventDefault();
  };
</script>
</htmlexample>

ReadOnly:
true

----
instance.type : String

The mime type of the item, such as **'text/plain'**, **'image/png'**, etc.

<htmlexample>
</htmlexample>

ReadOnly:
true

----
prototype.getAsString(callback(data : String) : undefined) : undefined

Calls **callback** with the text data for **this**.  Only valid
if %%#kind|**kind**%% is **'string'**.

<htmlexample>
</htmlexample>

----
prototype.getAsFile() : File

Returns the File data for **this**.  Only valid
if %%#kind|**kind**%% is **'file'**.

<htmlexample>
</htmlexample>
