Float64Array : ArrayBufferView

Float64Array is similar to an %%/Array|**Array**%% where each item is a
64 bit (8 byte) floating point number (the same as the standard %%Number|**Number**%% type).
Float64Arrays cannot change size after creation.

Spec:
http://www.khronos.org/registry/typedarray/specs/latest/#7

----
new Float64Array(length : Number) : Float64Array

Creates a new **Float64Array** of the specified length where
each item starts out as **0**.

<example>
var x = new Float64Array(2);
x[0] = 17;
console.log(x[0]);
console.log(x[1]);
console.log(x.length);
</example>

----
new Float64Array(array : Array) : Float64Array

Creates a new **Float64Array** and copies the items of **array** into 
**this**. 

<example>
var x = new Float64Array([17, -45.3]);
console.log(x[0]);
console.log(x[1]);
console.log(x.length);
</example>

----
new Float64Array(array : Float64Array) : Float64Array

Creates a new **Float64Array** and copies the items of **array** into 
**this**. **array** can be any of the typed array types and the copied 
items will be converted to 64 bit floating point numbers before being stored in **this**. 

<example>
var x = new Float64Array([17, -45.3]);
var y = new Float64Array(x);
console.log(x[0]);
console.log(x[1]);
console.log(x.length);
x[0] = -2;
console.log(y[0]); // y is not modified
</example>

----
new Float64Array(buffer : ArrayBuffer, [byteOffset = 0 : Number, [length : Number]]) : Float64Array

Creates a view on top of the specified **buffer** starting at **byteOffset** of
**length** items. Changes to the items in **this** actual affect the underlying
**buffer**, and vice versa.  **byteOffset** must be a multiple of 8. (Use 
%%/DataView|**DataView**%% for unaligned data.) If **length** is not specified, 
**buffer.length - byteOffset** must be a multiple of 8 and
**this.length** will be **(buffer.length - byteOffset) / 8**.

<example>
var buffer = new ArrayBuffer(16);
var x = new Float64Array(buffer, 0, 2);
// Make another view of last 4 bytes of the buffer
var y = new Float64Array(buffer, 8, 1);
x[1] = 7;
console.log(y[0]); // y is a live view on the buffer
</example>

----
instance[index : Number] : Number

Gets and sets the element in **this** at **index**. 
**index** should be between **0** and
**%%#length|this.length%% - 1**.

<example>
var x = new Float64Array(2);
x[0] = 17;
console.log(x[0]);
console.log(x[1]);
</example>

----
instance.buffer : ArrayBuffer

Returns the underlying buffer for this Float64Array.

<example>
var buffer = new ArrayBuffer(16);
var x = new Float64Array(buffer, 0, 2);
var y = new Float64Array(buffer, 8, 1);
console.log(x.buffer === y.buffer); 
</example>

ReadOnly:
true

----
instance.byteOffset : Number

The offset into **this.buffer** where the 0th item is stored.

<example>
var buffer = new ArrayBuffer(16);
var x = new Float64Array(buffer, 8, 1);
console.log(x.byteOffset); 
</example>

ReadOnly:
true

----
instance.byteLength : Number

The length of **this** in bytes. 

<example>
var buffer = new ArrayBuffer(16);
var x = new Float64Array(buffer, 8, 1);
console.log(x.byteLength); 
console.log(x.length * Float64Array.BYTES_PER_ELEMENT); 
</example>

ReadOnly:
true

----
instance.length : Number

The number of elements in **this**. It is 1 greater than the index
of the last item.

<example>
var x = new Float64Array(10);
console.log(x.length);
</example>

ReadOnly:
true

----
prototype.set(array : Array, [offset = 0 : Number]) : undefined

Copies items from **array** into **this** starting at **this[offset]**.
Copied items are converted to 64 bit floating point numbers before storing in **this**.

<example>
var x = new Float64Array(10);
x.set([18, 93, 42], 3);
console.log(x[3]);
console.log(x[4]);
console.log(x[5]);
</example>

----
prototype.set(array : Float64Array, [offset = 0 : Number]) : undefined

Copies items from **array** into **this** starting at **this[offset]**.
**array** can be any of the typed array types and the copied items will be
converted to 64 bit floating point numbers before storing in **this**.

<example>
var x = new Float64Array(10);
x.set(new Float64Array([18, 93, 42]), 3);
console.log(x[3]);
console.log(x[4]);
console.log(x[5]);
</example>

----
prototype.subarray(begin : Number, [end : Number]) : Float64Array

Returns a new Float64Array that is a view on top of **this** containing items
**this[begin]**, **this[begin + 1]**, ..., **this[end - 1]**.  The
0th item in the returned array in the same memory location as 
**this[begin]**. If **end** is not specified, **this.length** is used.

<example>
var x = new Float64Array([0, 1, 2, 3, 4, 5]); // length=6
var y = x.subarray(2, 5);
console.log(y.length);
console.log(y[0]);
console.log(y[1]);
y[0] = -1;
console.log(x[2]);
</example>


----
BYTES_PER_ELEMENT : Number

Returns the size in bytes of an item in a Float64Array.

<example>
console.log(Float64Array.BYTES_PER_ELEMENT);
</example>

